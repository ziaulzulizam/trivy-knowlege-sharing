#!/bin/bash
# automated-security-pipeline.sh

IMAGE_NAME="myregistry/vulnerable-php-app:v1.0.0"
REPORT_DIR="./security-reports"
DATE=$(date +%Y%m%d_%H%M%S)

mkdir -p $REPORT_DIR

echo "Starting comprehensive security assessment for $IMAGE_NAME"

# 1. Generate JSON report for programmatic analysis
echo "Generating JSON report..."
trivy image --format json --output "$REPORT_DIR/vulnerability-report-$DATE.json" $IMAGE_NAME

# 2. Generate SARIF for GitHub Security
echo "Generating SARIF report for GitHub..."
trivy image --format sarif --output "$REPORT_DIR/trivy-results-$DATE.sarif" $IMAGE_NAME

# 3. Generate HTML report for stakeholders
echo "Generating HTML report for stakeholders..."
trivy image --format template --template '@/contrib/html.tpl' --output "$REPORT_DIR/security-report-$DATE.html" $IMAGE_NAME

# 4. Generate custom detailed HTML report
echo "Generating detailed HTML report with custom template..."
trivy image --format template --template ./custom-report.tpl --output "$REPORT_DIR/detailed-vulnerability-report-$DATE.html" $IMAGE_NAME

# 5. Generate executive summary
echo "Generating executive summary..."
cat > "$REPORT_DIR/executive-summary-$DATE.txt" << EOF
SECURITY ASSESSMENT EXECUTIVE SUMMARY
=====================================
Scan Date: $(date)
Image: $IMAGE_NAME

VULNERABILITY SUMMARY:
$(trivy image --format json $IMAGE_NAME | jq -r '[.Results[]?.Vulnerabilities[]? | .Severity] | group_by(.) | map({severity: .[0], count: length}) | .[] | "- \(.severity): \(.count) vulnerabilities"')

CRITICAL ISSUES REQUIRING IMMEDIATE ATTENTION:
$(trivy image --severity CRITICAL --format table $IMAGE_NAME)

RECOMMENDATIONS:
1. Update base image to latest stable version
2. Update all packages to fixed versions
3. Implement security scanning in CI/CD pipeline
4. Schedule regular vulnerability assessments
EOF

echo "Reports generated in $REPORT_DIR/"
echo "Summary: $(trivy image --format json $IMAGE_NAME | jq -r '[.Results[]?.Vulnerabilities[]? | .Severity] | group_by(.) | map({severity: .[0], count: length}) | map("\(.severity): \(.count)") | join(", ")')"